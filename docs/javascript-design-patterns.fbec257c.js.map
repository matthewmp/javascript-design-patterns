{"version":3,"sources":["_Creational_Design_Patterns/Singleton/InitialClass_NotSingleton.js","_Creational_Design_Patterns/Singleton/Singleton.js","_Creational_Design_Patterns/Singleton/Singleton2.js","_Behavioral_Design_Patterns/Observer/Observer.js","_Structural_Design_Patterns/Adapter/Adapter.js","index.js"],"names":["LoggerUtility_NotSingleton","logs","message","push","console","log","printLogCount","length","LoggerUtility","instance","singleton1","Object","freeze","LoggerUtility2","ObserverList","observerList","observer","indexOf","index","Error","obj","i","splice","Subject","observers","addObserver","removeAt","context","forEach","update","inp1","document","getElementById","inp2","inp3","divScoreBoard","btnIncScoreBoard","scoreBoardScore","inpObserver","DOMElement","content","element","score","textContent","ScoreBoard","btnInc","querySelector","divScore","addEventListener","incrementScore","broadCastScore","render","notify","innerText","observer1","observer2","observer3","scoreBoard","MPH_Spedometer","speed","interval","accelerating","clearInterval","setInterval","incrementSpeed","setTimeout","decrementSpeed","releaseGas","KPH_Adapter","vehicle","mph","kph","inerval","accelerate","showSpeeds","currentSpeed","parseInt","getMPH","getKPH","btnAccelerate","kphAdapter","window","singleton2","Observer","Adapter"],"mappings":"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","file":"javascript-design-patterns.fbec257c.js","sourceRoot":"..","sourcesContent":["// Starting with a LoggerUtility class that is not a singleton\n\nexport default class LoggerUtility_NotSingleton {\n    constructor(){\n        this.logs = [];\n    }\n\n    log(message){\n        this.logs.push(message);\n        console.log(`Logger: ${message}`);\n        this.printLogCount();\n    }\n\n    printLogCount(){\n        console.log(`There are ${this.logs.length} logs.`);\n    }\n}","/*\n    The LoggerUtility can be imported across multiple files/modules and endless\n    amounts of instances can be created that will be completely unique unto themselves\n*/\n\n/*  \n    \n        *** Implementing Singleton Pattern On LoggerUtility Class ***\n\n 1. Start by simply not exporting the class since we do not want\n    the ability for multiple instances to be created\n\n 2 . Check to see if there is an instance property on the LoggerUtility\n     If there is not, set the value of the instance property to \"this\".\n     This is done on the class itself and not on an instance.\n\n 3.  Return that instance property which will now be the class itself.\n\n 4.  Create a new instance of the logger utility at the bottom  of the file\n\n 5.  Freeze the instance so that no properties or methods can be added to it\n\n 6.  Export default that instance\n\n */\n\nclass LoggerUtility { // 1\n    constructor(){\n        if(LoggerUtility.instance == null){  // 2\n            this.logs = [];\n            LoggerUtility.instance = this;\n        }\n        return LoggerUtility.instance;  // 3\n    }\n\n    log(message){\n        this.logs.push(message);\n        console.log(`Logger: ${message}`);\n        this.printLogCount();\n    }\n\n    printLogCount(){\n        console.log(`There are ${this.logs.length} logs.`);\n    }\n}\n\nconst singleton1 = new LoggerUtility(); // 4\nObject.freeze(singleton1); // 5\nexport default singleton1;  // 6","/*\n    Below is another implementation of the Singleton pattern.\n    \n    This example allows the importing of the class.\n\n    This will allow an instance to be made across all\n    modules (files) in a project using the \"new\" keyword \n    but they will all be the same instance across the application\n*/\n\nexport default class LoggerUtility2 { \n    constructor(){\n        if(LoggerUtility2.instance instanceof LoggerUtility2){  \n            return LoggerUtility2.instance;  \n        }\n\n        this.logs = [];\n\n        Object.freeze(this);\n        LoggerUtility2.instance = this;\n    }\n\n    log(message){\n        this.logs.push(message);\n        console.log(`Logger: ${message}`);\n        this.printLogCount();\n    }\n\n    printLogCount(){\n        console.log(`There are ${this.logs.length} logs.`);\n    }\n}","import '../behavioral.css';\n\n// Model for list of observers\n\nexport class ObserverList{\n    constructor(){\n        // Array to hold list of all current observers\n        this.observerList = [];\n    }\n\n    // Add new element to observer list\n    addObserver(observer){\n        if(this.observerList.indexOf(observer) === -1){\n            this.observerList.push(observer);\n        }\n    }\n\n    // Return # of current observers\n    count(){\n        return this.ObserverList.length;\n    }\n\n    // Retrieve specific observer from observerList by index #\n    get(index){\n        if(index > -1 && index < this.observerList.length )\n        {\n            return this.observerList[index];\n        }\n        else {\n            throw new Error('Observer index provided is not valid.')\n        }\n    }\n\n    // Get index # of specific observer in observerList\n    indexOf(obj){\n        for(let i = 0; i < this.observerList.length; i++){\n            if(this.observerList[i] === obj){\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    // Remove observer from observerList using index #\n    removeAt(index){\n        this.observerList.splice(index, 1);\n    }\n}\n\n// Model Subject\nexport class Subject{\n    constructor(){\n        this.observers = new ObserverList();\n    }\n    \n    addObserver(observer){\n        this.observers.addObserver(observer);\n    }\n\n    removeObserver(observer){\n        this.observers.removeAt(this.observers.indexOf(observer, 0));\n    }\n\n    notify(context){\n        this.observers.observerList.forEach((observer) => {\n            observer.update(context);\n        })\n    }\n}\n\n// Grab elements and assign to variables\nconst inp1 = document.getElementById('inp1');\nconst inp2 = document.getElementById('inp2');\nconst inp3 = document.getElementById('inp3');\n\nconst divScoreBoard = document.getElementById('scoreboard');\nconst btnIncScoreBoard = document.getElementById('btnIncrementScore');\nconst scoreBoardScore = document.getElementById('scoreBoard-score');\n\n// Create concrete observer class to instatiate 3 times and assign\n// a DOM element to store their content\nclass inpObserver {\n    constructor(DOMElement){\n        this.content = '';\n        this.element = DOMElement;\n\n        this.update('0');\n    }\n\n    update(score){\n        this.content = score;\n        this.element.textContent = (this.content);\n    }\n}\n\n// Create a concrete subject to broadcast/notify all observers the subject's score\nclass ScoreBoard extends Subject {\n    constructor(DOMElement){\n        super();\n        this.score = 10;\n        this.element = DOMElement;\n        this.btnInc = this.element.querySelector('#btnIncrementScore');\n        this.divScore = this.element.querySelector('#scoreBoard-score');\n\n        this.btnInc.addEventListener('click', () => {\n            this.incrementScore();\n            this.broadCastScore();\n        })\n\n        this.render();\n    }\n\n    incrementScore(){\n        this.score++;\n        this.render();\n        this.broadCastScore();\n    }\n\n    decrementScore(){\n        this.score--;\n        this.render();\n        this.broadCastScore();\n    }\n\n    broadCastScore(){\n        this.notify(this.score);\n    }\n\n    render(){\n        this.divScore.innerText = this.score;\n    }\n}\n\n// Instantiate 3 elements that will be observers\nconst observer1 = new inpObserver(inp1);\nconst observer2 = new inpObserver(inp2);\nconst observer3 = new inpObserver(inp3);\n\n// Instantiate GameScore\nconst scoreBoard = new ScoreBoard(divScoreBoard);\nscoreBoard.addObserver(observer1)\nscoreBoard.addObserver(observer2)\nscoreBoard.addObserver(observer3)","import '../structural.css';\n\n// Spedometer that exelerates and shows speed in MPH\nexport class MPH_Spedometer{\n    constructor(){\n        this.speed = 0;\n        // store interval # for setinterval\n        this.interval = 0;\n        this.accelerating = false;\n    }\n\n    accelerate(){\n        // Flag Object that the gas is being pressed to accelerate\n        this.accelerating = true;\n        // Clear any intervals that may already been set\n        clearInterval(this.interval);\n        // While holding down the accelerator\n        this.interval = setInterval(() => {\n            this.incrementSpeed();\n        },200);\n    }\n\n    incrementSpeed(){\n        if(this.speed < 89){\n            this.speed++;\n            let currentSpeed = this.speed;\n        }\n    }\n\n    decrementSpeed(){\n        if(this.speed > 0){\n            this.speed--;\n            let currentSpeed = this.speed;\n        }\n    }\n\n    releaseGas(){\n        // Flag Object that the gas has been released\n        this.accelerating = false;\n        // Clear any intervals that may already been set\n        clearInterval(this.interval);\n        // While releasing the gas\n        if(this.accelerating === false && this.speed > 0){\n            setTimeout(() => {\n                if(this.accelerating === false && this.speed > 0){\n                    this.decrementSpeed();\n                    this.releaseGas();\n                }\n            },300);\n        }\n    }\n\n    get currentSpeed(){\n        return this.speed;\n    }\n}\n\n// Adapter for MPH_Spedometer\n\nexport class KPH_Adapter {\n    constructor(){\n        this.vehicle = new MPH_Spedometer();\n        this.mph = document.getElementById('mph');\n        this.kph = document.getElementById('kph');\n        this.inerval = null;\n    }\n\n    accelerate(){\n        this.vehicle.accelerate();\n        this.inerval = setInterval(()=> {\n            this.showSpeeds();\n        },200);\n    }\n\n    incrementSpeed(){\n        this.vehicle.incrementSpeed();   \n    }\n\n    decrementSpeed(){\n        this.vehicle.decrementSpeed();\n        \n    }\n\n    releaseGas(){\n        clearInterval(this.inerval);\n        this.vehicle.releaseGas();\n        this.inerval = setInterval(() => {\n            this.showSpeeds();\n            if(this.vehicle.currentSpeed <= 0){\n                clearInterval(this.inerval);\n            }\n        })\n    }\n\n    getMPH(){\n        return this.vehicle.currentSpeed;\n    }\n\n    getKPH(){\n        return parseInt(this.vehicle.currentSpeed * 1.609);\n    }\n\n    showSpeeds(){\n        this.mph.innerText = this.getMPH();\n        this.kph.innerText = this.getKPH();\n    }\n}\n\nconst btnAccelerate = document.getElementById('btnAccelerate');\n\nconst kphAdapter = new KPH_Adapter();\nbtnAccelerate.addEventListener('mousedown', () => {\n    kphAdapter.accelerate();    \n})\n\nbtnAccelerate.addEventListener('mouseup', () => {\n    kphAdapter.releaseGas();\n})","// import all Singleton classes/instances\nimport LoggerUtility_NotSingleton from './_Creational_Design_Patterns/Singleton/InitialClass_NotSingleton';\nimport singleton1 from './_Creational_Design_Patterns/Singleton/Singleton';\nimport singleton2 from './_Creational_Design_Patterns/Singleton/Singleton2';\n\nimport * as Observer from './_Behavioral_Design_Patterns/Observer/Observer';\n\nimport * as Adapter from './_Structural_Design_Patterns/Adapter/Adapter';\n\n/* \n\n    Make all Singleton class examples global and executable\n    from the browser console.\n\n*/\n\nwindow.singleton1 = singleton1; // This is not an exported class so does not have constructor\nwindow.singleton2 = singleton2;\nwindow.LoggerUtility_NotSingleton = LoggerUtility_NotSingleton;\n\n// Observer Classes\nwindow.Subject = Observer.Subject;\nwindow.ObserverList = Observer.ObserverList;\n\n// Adapter Classes\nwindow.Adapter = Adapter;"]}